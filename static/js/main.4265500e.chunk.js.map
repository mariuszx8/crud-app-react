{"version":3,"sources":["Components/Campaigns/Campaigns.js","Pages/Home/Home.js","Components/CampaignForm/CampaignForm.js","Pages/AddCampaign/AddCampaign.js","Pages/EditCampaign.js","App.js","index.js"],"names":["Campaigns","useState","campaignData","setCampaignData","useEffect","cData","localStorage","getItem","length","JSON","parse","setItem","className","map","item","name","keywords","keyword","index","status","bidAmount","fund","town","radius","to","pathname","state","campaign","style","alignItems","onClick","window","confirm","itemID","removeItem","filter","_id","stringify","deleteHandler","Home","CampaignForm","uuidv4","id","setId","setName","campaignKeywords","setKeywords","setBidAmount","setFund","setStatus","setTown","setRadius","isEdited","history","useHistory","towns","i","el","push","uniqueTowns","Array","from","Set","uniqueKeywords","onSubmit","event","preventDefault","newCampaign","alert","onReset","type","placeholder","required","value","onChange","target","list","join","split","option","checked","min","AddCampaign","EditCampaign","useLocation","undefined","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4265500e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../Styles/App.scss';\nimport './Campaigns.scss';\n\nfunction Campaigns() {\n\n    const [campaignData,setCampaignData] = useState([]);\n\n    useEffect(() => {\n        var cData = localStorage.getItem(\"campaignData\");\n        if (cData!= null && cData.length > 0) {\n            setCampaignData(JSON.parse(cData));\n        } else {\n            localStorage.setItem(\"campaignData\", []);\n        }\n    }, []);\n\n    function deleteHandler(itemID) {\n        let removeItem = campaignData.filter(campaign => (campaign._id !== itemID))\n        setCampaignData(removeItem);\n        localStorage.setItem(\"campaignData\", JSON.stringify(removeItem));\n    }\n\n    return (\n        <div className=\"campaigns-list\">\n            <div className=\"name-header\">Campaigns:</div>\n            { campaignData.length > 0 ?\n                campaignData.map((item) => (\n                    <div key={item._id} className=\"flex-container flex-column campaign-element\">\n                        <div className=\"campaign-name\">{item.name}</div>\n                        <div className=\"flex-container details-container\">\n                            <div className=\"campaign-details\">\n                                <div>\n                                    Keywords: {item.keywords.map((keyword, index) => (<span key={index} className=\"keyword\">{keyword}</span>))}\n                                </div>\n                                <div>\n                                    Status: <span className=\"bold\">{item.status ? \"on\" : \"off\"}</span>\n                                </div>\n                            </div>\n                            <div className=\"campaign-details\">\n                                <div>\n                                    Bid amount: <span className=\"bold\">{item.bidAmount} zł</span>\n                                </div>\n                                <div>\n                                    Campaign fund: <span className=\"bold\">{item.fund} zł</span>\n                                </div>\n                            </div>\n                            <div className=\"campaign-details\">\n                                <div>\n                                    Town: <span className=\"bold\">{item.town}</span>\n                                </div>\n                                <div>\n                                    Radius: <span className=\"bold\">{item.radius} km</span>\n                                    </div>\n                            </div>\n                            <div className=\"campaign-options\">\n                                <div className=\"edit-btn flex-container\">\n                                    <Link to={{pathname: \"/EditCampaign\", state: {campaign: item}}} className=\"flex-container\" style={{alignItems:'center'}}>\n                                        <span className=\"material-icons\">\n                                            edit\n                                        </span>\n                                        Edit\n                                    </Link>\n                                </div>\n                                <div \n                                    className=\"delete-btn flex-container\"\n                                    onClick={() => {if(window.confirm('Are you sure you want to delete this campaign?')){deleteHandler(item._id)};}}\n                                >\n                                    <span className=\"material-icons\">\n                                        delete\n                                    </span>\n                                    Delete\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )) : \n                <div className=\"flex-container flex-column empty-campaigns\">\n                    Brak wpisów\n                </div>\n                }\n        </div>\n    )\n}\n\nexport default Campaigns;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Campaigns from '../../Components/Campaigns/Campaigns';\nimport './Home.scss';\n\nfunction Home() {\n    return (\n        <>\n            <Link to=\"/AddCampaign\" className=\"btn-add\"> \n                + Add campaign\n            </Link>\n            <main>\n                <Campaigns/>\n            </main>\n        </>\n    )\n}\n\nexport default Home;\n","import React, { useState} from 'react';\nimport './CampaignForm.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useHistory } from 'react-router';\n\nfunction CampaignForm({campaign}) {\n\n    const [id, setId] = useState(campaign._id === '' ? uuidv4() : campaign._id);\n    const [name, setName] = useState(campaign.name);\n    const [campaignKeywords, setKeywords] = useState(campaign.keywords);\n    const [bidAmount, setBidAmount] = useState(campaign.bidAmount);\n    const [fund, setFund] = useState(campaign.fund);\n    const [status, setStatus] = useState(campaign.status);\n    const [town, setTown] = useState(campaign.town);\n    const [radius, setRadius] = useState(campaign.radius);\n    const [isEdited] = useState(campaign._id === '' ? false : true);\n\n    const history = useHistory();\n\n    var towns = [];\n    var keywords = [];\n    var campaignData = localStorage.getItem(\"campaignData\");\n\n    if (campaignData!= null && campaignData.length > 0) {\n        campaignData = JSON.parse(campaignData);\n        \n        for (var i =0; i< campaignData.length; i++) {\n            towns[i] = campaignData[i].town;\n            for (const el of campaignData[i].keywords) {\n                keywords.push(el);\n            }\n        }\n    } else {\n        campaignData = []\n    }\n    var uniqueTowns = Array.from([...new Set(towns)]);\n    var uniqueKeywords = Array.from([...new Set(keywords)]);\n\n    const saveData = (event) => {\n        event.preventDefault();\n        var newCampaign = {\n            _id: id,\n            name: name,\n            keywords: campaignKeywords,\n            bidAmount:bidAmount,\n            fund:fund,\n            status: status,\n            town: town,\n            radius: radius,\n        };\n        if(isEdited) {\n            for(var i=0;i<campaignData.length;i++) {\n                if(campaignData[i]._id === id) {\n                    campaignData[i]= newCampaign;\n                }\n             }\n        } else {\n            campaignData.push(newCampaign);\n        }\n        localStorage.setItem(\"campaignData\", JSON.stringify(campaignData));\n        alert(\"Saved campaign\");\n        history.push('/')\n    }\n\n    const resetForm = (event) => {\n        setId(uuidv4());\n        setName('');\n        setKeywords([]);\n        setBidAmount('');\n        setFund('');\n        setStatus(false);\n        setTown('');\n        setRadius('');\n    }\n\n    return (\n        <form onSubmit={saveData} onReset={resetForm}>\n            <div>\n                <label>\n                    Campaign name:\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Enter campaign name\"\n                        required\n                        value={name}\n                        onChange={(event) => setName(event.target.value)}\n                    />\n                </label>\n            </div>\n            <div>\n                <label>\n                    Keywords:\n                    <input\n                        type=\"text\"\n                        name=\"keywords\"\n                        placeholder=\"Enter keywords for campaign\"\n                        required\n                        list='keywords_list'\n                        value={campaignKeywords.join(\" \")}\n                        onChange={(event) => setKeywords(event.target.value.split(\" \"))}\n                    />\n                     <datalist id=\"keywords_list\">\n                        {uniqueKeywords.map((option, index) =>(<option key={index} value={option}></option>))}\n                    </datalist>\n                </label>\n                <label className=\"status\">\n                    Status (on/off):\n                    <input\n                        type=\"checkbox\"\n                        name='status'\n                        checked={status}\n                        onChange={(event) => setStatus(event.target.checked)}\n                    />\n                </label>\n            </div>\n            <div>\n                <label>\n                    Bid amount:\n                    <input\n                        type=\"number\"\n                        name=\"bidAmount\"\n                        placeholder=\"Enter bid amount\"\n                        min=\"1\"\n                        required\n                        value={bidAmount}\n                        onChange={(event) => setBidAmount(event.target.value)}\n                    />\n                </label>\n                <label>\n                    Campaign fund:\n                    <input\n                        type=\"number\"\n                        name=\"fund\"\n                        placeholder=\"Enter campaign fund\"\n                        min=\"1\"\n                        required\n                        value={fund}\n                        onChange={(event) => setFund(event.target.value)}\n                    />\n                </label>\n            </div>\n            <div>\n                <label>\n                    Town:\n                    <input\n                        list=\"towns\"\n                        type=\"text\"\n                        name=\"town\"\n                        placeholder=\"Enter town name\"\n                        value={town}\n                        onChange={(event) => setTown(event.target.value)}\n                    />\n                    <datalist id=\"towns\">\n                        {uniqueTowns.map((option, index) =>(<option key={index} value={option}></option>))}\n                    </datalist>\n                </label>\n                <label>\n                    Radius [kilometers]:\n                    <input\n                        type=\"number\"\n                        name=\"radius\"\n                        placeholder=\"Enter campaign radius\"\n                        min=\"1\"\n                        required\n                        value={radius}\n                        onChange={(event) => setRadius(event.target.value)}\n                    />\n                </label>\n            </div>\n        <div className=\"buttons\">\n            <button type=\"reset\">Reset</button>\n            <button type=\"submit\">Submit</button>\n        </div>    \n    </form>\n    )\n}\n\nexport default CampaignForm\n","import React from 'react';\nimport CampaignForm from '../../Components/CampaignForm/CampaignForm';\nimport './AddCampaign.scss';\n\nfunction AddCampaign() {\n\n    return (\n        <div>\n            <header>\n                <span>Add campaign</span>\n            </header>\n           <CampaignForm\n            campaign={{\"_id\":'',\"name\":\"\",\"keywords\":[],\"bidAmount\":'',\"fund\":'',\"status\":false,\"town\":\"\",\"radius\":''}}\n           />\n        </div>\n    )\n}\n\nexport default AddCampaign\n","import React from 'react'\nimport { useHistory, useLocation } from 'react-router';\nimport CampaignForm from '../Components/CampaignForm/CampaignForm';\n\nfunction EditCampaign() {\n\n    const history = useHistory();\n    const location = useLocation();\n    const campaign = location.state?.campaign;\n\n    if(campaign===undefined) {    \n        history.push('/')\n        return (\n            <>\n            </>\n        )\n    } else {\n        return (\n            <div>\n                <header>\n                    <span>Edit campaign</span>\n                </header>\n               <CampaignForm\n                    campaign={campaign}\n               />\n            </div>\n        )\n    }\n}\n\nexport default EditCampaign\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Pages/Home/Home';\nimport AddCampaign from './Pages/AddCampaign/AddCampaign';\nimport EditCampaign from './Pages/EditCampaign';\nimport './Styles/App.scss';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/AddCampaign' component={AddCampaign}/>\n        <Route exact path='/EditCampaign' component={EditCampaign}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}